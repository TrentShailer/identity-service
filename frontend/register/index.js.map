{
  "version": 3,
  "sources": ["file:///C:/Users/trent/Files/Projects/identity-service/frontend/lib/form.ts", "file:///C:/Users/trent/Files/Projects/identity-service/frontend/lib/redirect.ts", "file:///C:/Users/trent/Files/Projects/identity-service/frontend/lib/fetch.ts", "file:///C:/Users/trent/Files/Projects/identity-service/frontend/scripts/config.ts", "file:///C:/Users/trent/Files/Projects/identity-service/frontend/scripts/pageRequirements.ts", "file:///C:/Users/trent/Files/Projects/identity-service/frontend/register/index.ts"],
  "sourcesContent": ["import { Problem } from \"./fetch.ts\";\r\n\r\nexport class FormError {\r\n  element: HTMLElement;\r\n  contents: HTMLElement;\r\n\r\n  constructor(formId: string) {\r\n    this.element = getElementById<HTMLElement>(`${formId}/error`, HTMLElement);\r\n    this.contents = getElementById<HTMLElement>(`${formId}/error/content`, HTMLElement);\r\n  }\r\n\r\n  clearError() {\r\n    this.element.classList.add(\"collapse\");\r\n    this.element.ariaHidden = \"true\";\r\n    this.contents.textContent = \"\";\r\n  }\r\n\r\n  addError(error: string) {\r\n    if (this.contents.textContent === \"\") {\r\n      this.setError(`Invalid form: ${error}`);\r\n      return;\r\n    }\r\n\r\n    this.contents.textContent += `, ${error}`;\r\n  }\r\n\r\n  setError(error: string) {\r\n    this.element.classList.remove(\"collapse\");\r\n    this.element.ariaHidden = \"false\";\r\n    this.contents.textContent = error;\r\n  }\r\n\r\n  unexpectedResponse(action: string) {\r\n    this.setError(`Could not ${action} because the server sent an unexpected response.`);\r\n  }\r\n}\r\n\r\nexport class Input {\r\n  input: HTMLInputElement;\r\n  error: HTMLElement;\r\n\r\n  constructor(formId: string, inputId: string) {\r\n    this.input = getElementById<HTMLInputElement>(`${formId}${inputId}/input`, HTMLInputElement);\r\n    this.error = getElementById<HTMLElement>(`${formId}${inputId}/error`, HTMLElement);\r\n\r\n    this.input.addEventListener(\"input\", () => {\r\n      this.input.setCustomValidity(\"\");\r\n    });\r\n  }\r\n\r\n  getValue(): string {\r\n    if (this.input.type === \"checkbox\") {\r\n      if (this.input.checked) {\r\n        return \"checked\";\r\n      } else {\r\n        return \"unchecked\";\r\n      }\r\n    } else {\r\n      return this.input.value;\r\n    }\r\n  }\r\n\r\n  lock() {\r\n    this.input.disabled = true;\r\n  }\r\n\r\n  unlock() {\r\n    this.input.disabled = false;\r\n  }\r\n\r\n  clearError() {\r\n    this.input.setCustomValidity(\"\");\r\n    this.error.classList.add(\"hidden\");\r\n    this.error.ariaHidden = \"true\";\r\n    this.error.textContent = \"!\";\r\n  }\r\n\r\n  addError(error: string) {\r\n    if (this.error.textContent === \"!\") {\r\n      this.setError(`Invalid value: ${error}`);\r\n      return;\r\n    }\r\n    this.error.textContent += `, ${error}`;\r\n    this.input.setCustomValidity(this.error.textContent ?? \"Invalid value\");\r\n  }\r\n\r\n  setError(error: string) {\r\n    this.input.setCustomValidity(error);\r\n    this.error.classList.remove(\"hidden\");\r\n    this.error.ariaHidden = \"false\";\r\n    this.error.textContent = error;\r\n  }\r\n}\r\n\r\nexport class Form {\r\n  form: HTMLFormElement;\r\n  formError: FormError;\r\n  submitButton: HTMLButtonElement;\r\n  inputs: Map<string, Input>;\r\n\r\n  constructor(formId: string, inputIds: string[]) {\r\n    this.form = getElementById<HTMLFormElement>(formId, HTMLFormElement);\r\n    this.formError = new FormError(formId);\r\n    this.submitButton = getElementById<HTMLButtonElement>(`${formId}/submit`, HTMLButtonElement);\r\n\r\n    const inputs = new Map<string, Input>();\r\n    for (const inputId of inputIds) {\r\n      inputs.set(inputId, new Input(formId, inputId));\r\n    }\r\n    this.inputs = inputs;\r\n  }\r\n\r\n  clearErrors() {\r\n    this.formError.clearError();\r\n    for (const input of this.inputs.values()) {\r\n      input.clearError();\r\n    }\r\n  }\r\n\r\n  lock() {\r\n    this.submitButton.disabled = true;\r\n    for (const input of this.inputs.values()) {\r\n      input.lock();\r\n    }\r\n  }\r\n\r\n  unlock() {\r\n    this.submitButton.disabled = false;\r\n    for (const input of this.inputs.values()) {\r\n      input.unlock();\r\n    }\r\n  }\r\n\r\n  setInputErrors(problems: Problem[] | null) {\r\n    if (!problems || problems.length === 0) {\r\n      this.formError.addError(\"an unknown field is invalid\");\r\n      return;\r\n    }\r\n\r\n    for (const problem of problems) {\r\n      let input: Input | null = null;\r\n      if (problem.pointer) {\r\n        input = this.inputs.get(problem.pointer) ?? null;\r\n      }\r\n\r\n      if (input && problem.detail) {\r\n        input.addError(problem.detail);\r\n      } else if (input && !problem.detail) {\r\n        input.addError(\"unknown reason\");\r\n      } else if (!input && problem.detail) {\r\n        this.formError.addError(problem.detail);\r\n      } else {\r\n        this.formError.addError(\"an unknown field is invalid\");\r\n      }\r\n    }\r\n  }\r\n\r\n  getValues(): Map<string, string> {\r\n    const map = new Map();\r\n    for (const [id, input] of this.inputs) {\r\n      map.set(id, input.getValue());\r\n    }\r\n    return map;\r\n  }\r\n}\r\n\r\n// deno-lint-ignore no-explicit-any\r\ntype Class<T> = new (...args: any[]) => T;\r\n\r\n/**\r\n * # Panics\r\n * If element does not exist or is not an instance of the expected type.\r\n */\r\nfunction getElementById<T extends HTMLElement>(id: string, expected: Class<T>): T {\r\n  const element = document.getElementById(id);\r\n  if (!element || !(element instanceof expected)) {\r\n    throw `element '${id}' does not exist`;\r\n  }\r\n  return element;\r\n}\r\n", "export async function setHref(target: string): Promise<never> {\r\n  location.href = target;\r\n  return await block();\r\n}\r\n\r\nfunction block(): Promise<never> {\r\n  // deno-lint-ignore no-explicit-any\r\n  const poll = (resolve: any) => {\r\n    setTimeout(() => poll(resolve), 400);\r\n  };\r\n\r\n  return new Promise(poll);\r\n}\r\n", "import { setHref } from \"./redirect.ts\";\r\n\r\nexport type Problem = {\r\n  pointer: string | null;\r\n  detail: string | null;\r\n};\r\n\r\nexport type ServerResponse<T> =\r\n  | { status: \"ok\"; body: T }\r\n  | { status: \"clientError\"; problems: Problem[] }\r\n  | { status: \"serverError\" }\r\n  | { status: \"unauthorized\" }\r\n  | { status: \"notFound\" }\r\n  | never;\r\n\r\nexport type LogoutConfig = {\r\n  deleteTokenEndpoint: string;\r\n  loginHref: string;\r\n  additionalHeaders: Header[];\r\n};\r\n\r\nexport type Header = [string, string];\r\n\r\nexport const TOKEN_KEY = \"token\";\r\n\r\nexport class FetchBuilder {\r\n  #method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\n  #url: string;\r\n  #additionalHeaders: Header[] | null = null;\r\n  #body: object | null = null;\r\n  #logoutConfig: LogoutConfig | null = null;\r\n  #logoutShouldReturn: boolean = false;\r\n\r\n  constructor(method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\", url: string) {\r\n    this.#method = method;\r\n    this.#url = url;\r\n  }\r\n\r\n  setBody(body: object | null): FetchBuilder {\r\n    this.#body = body;\r\n    return this;\r\n  }\r\n\r\n  setHeaders(headers: Header[] | null): FetchBuilder {\r\n    this.#additionalHeaders = headers;\r\n    return this;\r\n  }\r\n\r\n  setLogout(logoutConfig: LogoutConfig | null, shouldReturn: boolean): FetchBuilder {\r\n    this.#logoutConfig = logoutConfig;\r\n    this.#logoutShouldReturn = shouldReturn;\r\n    return this;\r\n  }\r\n\r\n  async fetch<T>(): Promise<ServerResponse<T>> {\r\n    return await fetch(\r\n      this.#method,\r\n      this.#url,\r\n      this.#additionalHeaders,\r\n      this.#body,\r\n      this.#logoutConfig,\r\n      this.#logoutShouldReturn,\r\n    );\r\n  }\r\n}\r\n\r\nexport async function fetch<T>(\r\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\r\n  url: string,\r\n  additionalHeaders: Header[] | null,\r\n  body: object | null,\r\n  logoutConfig: LogoutConfig | null,\r\n  logoutShouldReturn: boolean,\r\n): Promise<ServerResponse<T>> {\r\n  const headers = new Headers();\r\n\r\n  if (additionalHeaders) {\r\n    for (const header of additionalHeaders) {\r\n      headers.append(header[0], header[1]);\r\n    }\r\n  }\r\n\r\n  if (body) {\r\n    headers.append(\"content-type\", \"application/json\");\r\n  }\r\n\r\n  const token = localStorage.getItem(TOKEN_KEY);\r\n  if (token && !headers.has(\"Authorization\")) {\r\n    headers.append(\"Authorization\", token);\r\n  }\r\n\r\n  let bodyContent = null;\r\n  if (body) {\r\n    bodyContent = JSON.stringify(body);\r\n  }\r\n\r\n  const response = await self.fetch(url, {\r\n    method,\r\n    body: bodyContent,\r\n    headers,\r\n  }).catch((ex) => {\r\n    console.warn(ex);\r\n    return new Response(null, { status: 500 });\r\n  });\r\n\r\n  if (response.ok) {\r\n    const bearer = response.headers.get(\"Authorization\");\r\n    if (bearer) {\r\n      localStorage.setItem(TOKEN_KEY, bearer);\r\n    }\r\n\r\n    const body = await response.json().catch((ex) => {\r\n      console.warn(ex);\r\n      return {};\r\n    });\r\n\r\n    return {\r\n      status: \"ok\",\r\n      body,\r\n    };\r\n  } else if (response.status === 401) {\r\n    if (logoutConfig) {\r\n      await logout(\r\n        logoutConfig,\r\n        logoutShouldReturn,\r\n      );\r\n    }\r\n\r\n    return { status: \"unauthorized\" };\r\n  } else if (response.status === 404) {\r\n    return { status: \"notFound\" };\r\n  } else if (response.status >= 400 && response.status < 500) {\r\n    const body = await response.json().catch((ex) => {\r\n      console.warn(ex);\r\n      return { problems: [] };\r\n    });\r\n\r\n    return {\r\n      status: \"clientError\",\r\n      problems: body.problems ?? [],\r\n    };\r\n  } else {\r\n    return { status: \"serverError\" };\r\n  }\r\n}\r\n\r\nexport async function logout(\r\n  config: LogoutConfig,\r\n  shouldReturn: boolean,\r\n): Promise<never> {\r\n  const token = localStorage.getItem(TOKEN_KEY);\r\n  await new FetchBuilder(\"DELETE\", config.deleteTokenEndpoint).setHeaders(config.additionalHeaders)\r\n    .fetch();\r\n  localStorage.removeItem(TOKEN_KEY);\r\n\r\n  if (token) {\r\n    alert(\"Your session has expired\");\r\n  }\r\n\r\n  const href = shouldReturn\r\n    ? `${config.loginHref}?redirect=${encodeURI(location.href)}`\r\n    : config.loginHref;\r\n\r\n  return await setHref(href);\r\n}\r\n", "import { Header, LogoutConfig } from \"../lib/fetch.ts\";\r\n\r\nexport const API_URL = \"http://localhost:8081\";\r\nexport const API_KEY: Header = [\"X-TS-API-Key\", \"identity-site\"];\r\n\r\nexport const LOGOUT_CONFIG: LogoutConfig = {\r\n  deleteTokenEndpoint: API_URL + \"/tokens/current\",\r\n  loginHref: \"/login\",\r\n  additionalHeaders: [API_KEY],\r\n};\r\n", "import { FetchBuilder, TOKEN_KEY } from \"../lib/fetch.ts\";\r\nimport { TokenDetails } from \"../types.ts\";\r\nimport { API_KEY, API_URL } from \"./config.ts\";\r\n\r\nexport async function getToken(): Promise<TokenDetails | null> {\r\n  const response = await new FetchBuilder(\"GET\", API_URL + \"/tokens/current\")\r\n    .setHeaders([API_KEY])\r\n    .fetch<TokenDetails>();\r\n\r\n  if (\r\n    response.status === \"serverError\"\r\n    || response.status === \"clientError\"\r\n    || response.status === \"unauthorized\"\r\n  ) {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    return null;\r\n  }\r\n\r\n  if (response.status === \"ok\") {\r\n    return response.body;\r\n  }\r\n  else {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    return null;\r\n  }\r\n}\r\n", "import { Form } from \"../lib/form.ts\";\r\nimport { FetchBuilder, TOKEN_KEY } from \"../lib/fetch.ts\";\r\nimport { API_KEY, API_URL } from \"../scripts/config.ts\";\r\nimport { setHref } from \"../lib/redirect.ts\";\r\nimport { getToken } from \"../scripts/pageRequirements.ts\";\r\n\r\nconst token = await getToken();\r\nif (token) {\r\n  switch (token.typ) {\r\n    case \"common\":\r\n      await setHref(\"/identity\");\r\n      break;\r\n    case \"provisioning\":\r\n      await setHref(\"/add-passkey\");\r\n      break;\r\n  }\r\n}\r\n\r\nconst form = new Form(\"/register\", [\"/username\", \"/displayName\"]);\r\nform.form.addEventListener(\"submit\", async (event) => {\r\n  event.preventDefault();\r\n\r\n  form.lock();\r\n  form.clearErrors();\r\n\r\n  const values = form.getValues();\r\n  const username = values.get(\"/username\") ?? \"\";\r\n  const displayName = values.get(\"/displayName\") ?? \"\";\r\n\r\n  const response = await new FetchBuilder(\"POST\", API_URL + \"/identities\")\r\n    .setHeaders([API_KEY])\r\n    .setBody({ username, displayName })\r\n    .fetch<unknown>();\r\n\r\n  if (response.status === \"ok\" && localStorage.getItem(TOKEN_KEY)) {\r\n    const params = new URLSearchParams(document.location.search);\r\n    const redirect = params.get(\"redirect\");\r\n    const nextPage = redirect ? `/add-passkey?redirect=${redirect}` : `/add-passkey`;\r\n    await setHref(nextPage);\r\n  }\r\n  else if (response.status === \"clientError\") {\r\n    form.setInputErrors(response.problems);\r\n  }\r\n  else {\r\n    form.formError.unexpectedResponse(\"register\");\r\n  }\r\n\r\n  form.unlock();\r\n});\r\n"],
  "mappings": "AAEO,IAAMA,EAAN,KAAM,CACX,QACA,SAEA,YAAYC,EAAgB,CAC1B,KAAK,QAAUC,EAA4B,GAAGD,CAAA,SAAgB,WAAA,EAC9D,KAAK,SAAWC,EAA4B,GAAGD,CAAA,iBAAwB,WAAA,CACzE,CAEA,YAAa,CACX,KAAK,QAAQ,UAAU,IAAI,UAAA,EAC3B,KAAK,QAAQ,WAAa,OAC1B,KAAK,SAAS,YAAc,EAC9B,CAEA,SAASE,EAAe,CACtB,GAAI,KAAK,SAAS,cAAgB,GAAI,CACpC,KAAK,SAAS,iBAAiBA,CAAA,EAAO,EACtC,MACF,CAEA,KAAK,SAAS,aAAe,KAAKA,CAAA,EACpC,CAEA,SAASA,EAAe,CACtB,KAAK,QAAQ,UAAU,OAAO,UAAA,EAC9B,KAAK,QAAQ,WAAa,QAC1B,KAAK,SAAS,YAAcA,CAC9B,CAEA,mBAAmBC,EAAgB,CACjC,KAAK,SAAS,aAAaA,CAAA,kDAAwD,CACrF,CACF,EAEaC,EAAN,KAAM,CACX,MACA,MAEA,YAAYJ,EAAgBK,EAAiB,CAC3C,KAAK,MAAQJ,EAAiC,GAAGD,CAAA,GAASK,CAAA,SAAiB,gBAAA,EAC3E,KAAK,MAAQJ,EAA4B,GAAGD,CAAA,GAASK,CAAA,SAAiB,WAAA,EAEtE,KAAK,MAAM,iBAAiB,QAAS,IAAA,CACnC,KAAK,MAAM,kBAAkB,EAAA,CAC/B,CAAA,CACF,CAEA,UAAmB,CACjB,OAAI,KAAK,MAAM,OAAS,WAClB,KAAK,MAAM,QACN,UAEA,YAGF,KAAK,MAAM,KAEtB,CAEA,MAAO,CACL,KAAK,MAAM,SAAW,EACxB,CAEA,QAAS,CACP,KAAK,MAAM,SAAW,EACxB,CAEA,YAAa,CACX,KAAK,MAAM,kBAAkB,EAAA,EAC7B,KAAK,MAAM,UAAU,IAAI,QAAA,EACzB,KAAK,MAAM,WAAa,OACxB,KAAK,MAAM,YAAc,GAC3B,CAEA,SAASH,EAAe,CACtB,GAAI,KAAK,MAAM,cAAgB,IAAK,CAClC,KAAK,SAAS,kBAAkBA,CAAA,EAAO,EACvC,MACF,CACA,KAAK,MAAM,aAAe,KAAKA,CAAA,GAC/B,KAAK,MAAM,kBAAkB,KAAK,MAAM,aAAe,eAAA,CACzD,CAEA,SAASA,EAAe,CACtB,KAAK,MAAM,kBAAkBA,CAAA,EAC7B,KAAK,MAAM,UAAU,OAAO,QAAA,EAC5B,KAAK,MAAM,WAAa,QACxB,KAAK,MAAM,YAAcA,CAC3B,CACF,EAEaI,EAAN,KAAM,CACX,KACA,UACA,aACA,OAEA,YAAYN,EAAgBO,EAAoB,CAC9C,KAAK,KAAON,EAAgCD,EAAQ,eAAA,EACpD,KAAK,UAAY,IAAID,EAAUC,CAAA,EAC/B,KAAK,aAAeC,EAAkC,GAAGD,CAAA,UAAiB,iBAAA,EAE1E,IAAMQ,EAAS,IAAI,IACnB,QAAWH,KAAWE,EACpBC,EAAO,IAAIH,EAAS,IAAID,EAAMJ,EAAQK,CAAA,CAAA,EAExC,KAAK,OAASG,CAChB,CAEA,aAAc,CACZ,KAAK,UAAU,WAAU,EACzB,QAAWC,KAAS,KAAK,OAAO,OAAM,EACpCA,EAAM,WAAU,CAEpB,CAEA,MAAO,CACL,KAAK,aAAa,SAAW,GAC7B,QAAWA,KAAS,KAAK,OAAO,OAAM,EACpCA,EAAM,KAAI,CAEd,CAEA,QAAS,CACP,KAAK,aAAa,SAAW,GAC7B,QAAWA,KAAS,KAAK,OAAO,OAAM,EACpCA,EAAM,OAAM,CAEhB,CAEA,eAAeC,EAA4B,CACzC,GAAI,CAACA,GAAYA,EAAS,SAAW,EAAG,CACtC,KAAK,UAAU,SAAS,6BAAA,EACxB,MACF,CAEA,QAAWC,KAAWD,EAAU,CAC9B,IAAID,EAAsB,KACtBE,EAAQ,UACVF,EAAQ,KAAK,OAAO,IAAIE,EAAQ,OAAO,GAAK,MAG1CF,GAASE,EAAQ,OACnBF,EAAM,SAASE,EAAQ,MAAM,EACpBF,GAAS,CAACE,EAAQ,OAC3BF,EAAM,SAAS,gBAAA,EACN,CAACA,GAASE,EAAQ,OAC3B,KAAK,UAAU,SAASA,EAAQ,MAAM,EAEtC,KAAK,UAAU,SAAS,6BAAA,CAE5B,CACF,CAEA,WAAiC,CAC/B,IAAMC,EAAM,IAAI,IAChB,OAAW,CAACC,EAAIJ,CAAA,IAAU,KAAK,OAC7BG,EAAI,IAAIC,EAAIJ,EAAM,SAAQ,CAAA,EAE5B,OAAOG,CACT,CACF,EASA,SAASX,EAAsCY,EAAYC,EAAkB,CAC3E,IAAMC,EAAU,SAAS,eAAeF,CAAA,EACxC,GAAI,CAACE,GAAW,EAAEA,aAAmBD,GACnC,KAAM,YAAYD,CAAA,mBAEpB,OAAOE,CACT,CCnLA,eAAsBC,EAAQC,EAAc,CAC1C,gBAAS,KAAOA,EACT,MAAMC,EAAA,CACf,CAEA,SAASA,GAAA,CAEP,IAAMC,EAAQC,GAAA,CACZ,WAAW,IAAMD,EAAKC,CAAA,EAAU,GAAA,CAClC,EAEA,OAAO,IAAI,QAAQD,CAAA,CACrB,CCWO,IAAME,EAAY,QAEZC,EAAN,KAAM,CACXC,GACAC,GACAC,GAAsC,KACtCC,GAAuB,KACvBC,GAAqC,KACrCC,GAA+B,GAE/B,YAAYC,EAA2CC,EAAa,CAClE,KAAKP,GAAUM,EACf,KAAKL,GAAOM,CACd,CAEA,QAAQC,EAAmC,CACzC,YAAKL,GAAQK,EACN,IACT,CAEA,WAAWC,EAAwC,CACjD,YAAKP,GAAqBO,EACnB,IACT,CAEA,UAAUC,EAAmCC,EAAqC,CAChF,YAAKP,GAAgBM,EACrB,KAAKL,GAAsBM,EACpB,IACT,CAEA,MAAM,OAAuC,CAC3C,OAAO,MAAMC,EACX,KAAKZ,GACL,KAAKC,GACL,KAAKC,GACL,KAAKC,GACL,KAAKC,GACL,KAAKC,EAAmB,CAE5B,CACF,EAEA,eAAsBO,EACpBN,EACAC,EACAM,EACAL,EACAE,EACAI,EAA2B,CAE3B,IAAML,EAAU,IAAI,QAEpB,GAAII,EACF,QAAWE,KAAUF,EACnBJ,EAAQ,OAAOM,EAAO,CAAA,EAAIA,EAAO,CAAA,CAAE,EAInCP,GACFC,EAAQ,OAAO,eAAgB,kBAAA,EAGjC,IAAMO,EAAQ,aAAa,QAAQlB,CAAA,EAC/BkB,GAAS,CAACP,EAAQ,IAAI,eAAA,GACxBA,EAAQ,OAAO,gBAAiBO,CAAA,EAGlC,IAAIC,EAAc,KACdT,IACFS,EAAc,KAAK,UAAUT,CAAA,GAG/B,IAAMU,EAAW,MAAM,KAAK,MAAMX,EAAK,CACrC,OAAAD,EACA,KAAMW,EACN,QAAAR,CACF,CAAA,EAAG,MAAOU,IACR,QAAQ,KAAKA,CAAA,EACN,IAAI,SAAS,KAAM,CAAE,OAAQ,GAAI,CAAA,EAC1C,EAEA,GAAID,EAAS,GAAI,CACf,IAAME,EAASF,EAAS,QAAQ,IAAI,eAAA,EACpC,OAAIE,GACF,aAAa,QAAQtB,EAAWsB,CAAA,EAQ3B,CACL,OAAQ,KACR,KAPW,MAAMF,EAAS,KAAI,EAAG,MAAOC,IACxC,QAAQ,KAAKA,CAAA,EACN,CAAC,EACV,CAKA,CACF,KAAO,QAAID,EAAS,SAAW,KACzBR,GACF,MAAMW,EACJX,EACAI,CAAA,EAIG,CAAE,OAAQ,cAAe,GACvBI,EAAS,SAAW,IACtB,CAAE,OAAQ,UAAW,EACnBA,EAAS,QAAU,KAAOA,EAAS,OAAS,IAM9C,CACL,OAAQ,cACR,UAPW,MAAMA,EAAS,KAAI,EAAG,MAAOC,IACxC,QAAQ,KAAKA,CAAA,EACN,CAAE,SAAU,CAAA,CAAG,EACxB,GAIiB,UAAY,CAAA,CAC7B,EAEO,CAAE,OAAQ,aAAc,CAEnC,CAEA,eAAsBE,EACpBC,EACAX,EAAqB,CAErB,IAAMK,EAAQ,aAAa,QAAQlB,CAAA,EACnC,MAAM,IAAIC,EAAa,SAAUuB,EAAO,mBAAmB,EAAE,WAAWA,EAAO,iBAAiB,EAC7F,MAAK,EACR,aAAa,WAAWxB,CAAA,EAEpBkB,GACF,MAAM,0BAAA,EAGR,IAAMO,EAAOZ,EACT,GAAGW,EAAO,SAAS,aAAa,UAAU,SAAS,IAAI,CAAA,GACvDA,EAAO,UAEX,OAAO,MAAME,EAAQD,CAAA,CACvB,CClKO,IAAME,EAAU,wBACVC,EAAkB,CAAC,eAAgB,iBAEnCC,EAA8B,CACzC,oBAAqBF,EAAU,kBAC/B,UAAW,SACX,kBAAmB,CAACC,EACtB,ECLA,eAAsBE,GAAA,CACpB,IAAMC,EAAW,MAAM,IAAIC,EAAa,MAAOC,EAAU,iBAAA,EACtD,WAAW,CAACC,EAAQ,EACpB,MAAK,EAER,OACEH,EAAS,SAAW,eACjBA,EAAS,SAAW,eACpBA,EAAS,SAAW,gBAEvB,aAAa,WAAWI,CAAA,EACjB,MAGLJ,EAAS,SAAW,KACfA,EAAS,MAGhB,aAAa,WAAWI,CAAA,EACjB,KAEX,CCnBA,IAAMC,EAAQ,MAAMC,EAAA,EACpB,GAAID,EACF,OAAQA,EAAM,IAAG,CACf,IAAK,SACH,MAAME,EAAQ,WAAA,EACd,MACF,IAAK,eACH,MAAMA,EAAQ,cAAA,EACd,KACJ,CAGF,IAAMC,EAAO,IAAIC,EAAK,YAAa,CAAC,YAAa,eAAe,EAChED,EAAK,KAAK,iBAAiB,SAAU,MAAOE,GAAA,CAC1CA,EAAM,eAAc,EAEpBF,EAAK,KAAI,EACTA,EAAK,YAAW,EAEhB,IAAMG,EAASH,EAAK,UAAS,EACvBI,EAAWD,EAAO,IAAI,WAAA,GAAgB,GACtCE,EAAcF,EAAO,IAAI,cAAA,GAAmB,GAE5CG,EAAW,MAAM,IAAIC,EAAa,OAAQC,EAAU,aAAA,EACvD,WAAW,CAACC,EAAQ,EACpB,QAAQ,CAAE,SAAAL,EAAU,YAAAC,CAAY,CAAA,EAChC,MAAK,EAER,GAAIC,EAAS,SAAW,MAAQ,aAAa,QAAQI,CAAA,EAAY,CAE/D,IAAMC,EADS,IAAI,gBAAgB,SAAS,SAAS,MAAM,EACnC,IAAI,UAAA,EACtBC,EAAWD,EAAW,yBAAyBA,CAAA,GAAa,eAClE,MAAMZ,EAAQa,CAAA,CAChB,MACSN,EAAS,SAAW,cAC3BN,EAAK,eAAeM,EAAS,QAAQ,EAGrCN,EAAK,UAAU,mBAAmB,UAAA,EAGpCA,EAAK,OAAM,CACb,CAAA",
  "names": ["FormError", "formId", "getElementById", "error", "action", "Input", "inputId", "Form", "inputIds", "inputs", "input", "problems", "problem", "map", "id", "expected", "element", "setHref", "target", "block", "poll", "resolve", "TOKEN_KEY", "FetchBuilder", "#method", "#url", "#additionalHeaders", "#body", "#logoutConfig", "#logoutShouldReturn", "method", "url", "body", "headers", "logoutConfig", "shouldReturn", "fetch", "additionalHeaders", "logoutShouldReturn", "header", "token", "bodyContent", "response", "ex", "bearer", "logout", "config", "href", "setHref", "API_URL", "API_KEY", "LOGOUT_CONFIG", "getToken", "response", "FetchBuilder", "API_URL", "API_KEY", "TOKEN_KEY", "token", "getToken", "setHref", "form", "Form", "event", "values", "username", "displayName", "response", "FetchBuilder", "API_URL", "API_KEY", "TOKEN_KEY", "redirect", "nextPage"]
}
