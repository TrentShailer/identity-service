// deno-lint-ignore-file
// deno-fmt-ignore-file
// @ts-nocheck
// @ts-self-types="./form.d.ts"
class FormError{constructor(formId){this.element=getElementById(formId+"/error",HTMLElement),this.contents=getElementById(formId+"/error/content",HTMLElement)}clearError(){this.element.classList.add("collapse"),this.element.ariaHidden="true",this.contents.textContent=""}addError(error){""===this.contents.textContent?this.setError("Invalid form: "+error):this.contents.textContent+=", "+error}setError(error){this.element.classList.remove("collapse"),this.element.ariaHidden="false",this.contents.textContent=error}unexpectedResponse(action){this.setError(`Could not ${action} because the server sent an unexpected response.`)}}class Input{constructor(formId,inputId){this.input=getElementById(""+formId+inputId+"/input",HTMLInputElement),this.error=getElementById(""+formId+inputId+"/error",HTMLElement),this.input.addEventListener("input",()=>{this.input.setCustomValidity("")})}getValue(){return this.input.value}lock(){this.input.disabled=!0}unlock(){this.input.disabled=!1}clearError(){this.input.setCustomValidity(""),this.error.classList.add("hidden"),this.error.ariaHidden="true",this.error.textContent="!"}addError(error){"!"===this.error.textContent?this.setError("Invalid value: "+error):(this.error.textContent+=", "+error,this.input.setCustomValidity(this.error.textContent??"Invalid value"))}setError(error){this.input.setCustomValidity(error),this.error.classList.remove("hidden"),this.error.ariaHidden="false",this.error.textContent=error}}class Form{constructor(formId,inputIds){this.form=getElementById(formId,HTMLFormElement),this.formError=new FormError(formId),this.submitButton=getElementById(formId+"/submit",HTMLButtonElement);var t,r=new Map;for(t of inputIds)r.set(t,new Input(formId,t));this.inputs=r}clearErrors(){this.formError.clearError();for(var t of this.inputs.values())t.clearError()}lock(){this.submitButton.disabled=!0;for(var t of this.inputs.values())t.lock()}unlock(){this.submitButton.disabled=!1;for(var t of this.inputs.values())t.unlock()}setInputErrors(problems){if(problems&&0!==problems.length)for(var r of problems){let t=null;(t=r.pointer?this.inputs.get(r.pointer)??null:t)&&r.detail?t.addError(r.detail):t&&!r.detail?t.addError("unknown reason"):!t&&r.detail?this.formError.addError(r.detail):this.formError.addError("an unknown field is invalid")}else this.formError.addError("an unknown field is invalid")}getValues(){var t,r,e=new Map;for([t,r]of this.inputs)e.set(t,r.getValue());return e}}
/**
 * # Panics
 * If element does not exist or is not an instance of the expected type.
 */function getElementById(id,expected){var t=document.getElementById(id);if(t&&t instanceof expected)return t;throw`element '${id}' does not exist`}export{FormError,Input,Form};