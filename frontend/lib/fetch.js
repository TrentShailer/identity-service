// deno-lint-ignore-file
// deno-fmt-ignore-file
// @ts-nocheck
// @ts-self-types="./fetch.d.ts"
var _FetchBuilder_method,_FetchBuilder_url,_FetchBuilder_additionalHeaders,_FetchBuilder_body,_FetchBuilder_logoutConfig,_FetchBuilder_logoutShouldReturn,__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver===state&&f:state.has(receiver))return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value;throw new TypeError("Cannot write private member to an object whose class did not declare it")},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver===state&&f:state.has(receiver))return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver);throw new TypeError("Cannot read private member from an object whose class did not declare it")};import{setHref}from"./redirect.js";let TOKEN_KEY="token";class FetchBuilder{constructor(method,url){_FetchBuilder_method.set(this,void 0),_FetchBuilder_url.set(this,void 0),_FetchBuilder_additionalHeaders.set(this,null),_FetchBuilder_body.set(this,null),_FetchBuilder_logoutConfig.set(this,null),_FetchBuilder_logoutShouldReturn.set(this,!1),__classPrivateFieldSet(this,_FetchBuilder_method,method,"f"),__classPrivateFieldSet(this,_FetchBuilder_url,url,"f")}setBody(body){return __classPrivateFieldSet(this,_FetchBuilder_body,body,"f"),this}setHeaders(headers){return __classPrivateFieldSet(this,_FetchBuilder_additionalHeaders,headers,"f"),this}setLogout(logoutConfig,shouldReturn){return __classPrivateFieldSet(this,_FetchBuilder_logoutConfig,logoutConfig,"f"),__classPrivateFieldSet(this,_FetchBuilder_logoutShouldReturn,shouldReturn,"f"),this}async fetch(){return fetch(__classPrivateFieldGet(this,_FetchBuilder_method,"f"),__classPrivateFieldGet(this,_FetchBuilder_url,"f"),__classPrivateFieldGet(this,_FetchBuilder_additionalHeaders,"f"),__classPrivateFieldGet(this,_FetchBuilder_body,"f"),__classPrivateFieldGet(this,_FetchBuilder_logoutConfig,"f"),__classPrivateFieldGet(this,_FetchBuilder_logoutShouldReturn,"f"))}}async function fetch(method,url,additionalHeaders,body,logoutConfig,logoutShouldReturn){var e=new Headers;if(additionalHeaders)for(var t of additionalHeaders)e.append(t[0],t[1]);body&&e.append("content-type","application/json");additionalHeaders=localStorage.getItem(TOKEN_KEY);additionalHeaders&&e.append("Authorization",additionalHeaders);let r=null;body&&(r=JSON.stringify(body));additionalHeaders=await self.fetch(url,{method:method,body:r,headers:e}).catch(ex=>(console.warn(ex),new Response(null,{status:500})));if(additionalHeaders.ok){url=additionalHeaders.headers.get("Authorization");url&&localStorage.setItem(TOKEN_KEY,url);let e=await additionalHeaders.json().catch(ex=>(console.warn(ex),{}));return{status:"ok",body:e}}if(401===additionalHeaders.status)return logoutConfig&&await logout(logoutConfig,logoutShouldReturn),{status:"unauthorized"};if(404===additionalHeaders.status)return{status:"notFound"};if(400<=additionalHeaders.status&&additionalHeaders.status<500){let e=await additionalHeaders.json().catch(ex=>(console.warn(ex),{problems:[]}));return{status:"clientError",problems:e.problems??[]}}return{status:"serverError"}}async function logout(config,shouldReturn){var e=localStorage.getItem(TOKEN_KEY),e=(await new FetchBuilder("DELETE",config.deleteTokenEndpoint).setHeaders(config.additionalHeaders).fetch(),localStorage.removeItem(TOKEN_KEY),e&&alert("Your session has expired"),shouldReturn?config.loginHref+"?redirect="+encodeURI(location.href):config.loginHref);return setHref(e)}_FetchBuilder_method=new WeakMap,_FetchBuilder_url=new WeakMap,_FetchBuilder_additionalHeaders=new WeakMap,_FetchBuilder_body=new WeakMap,_FetchBuilder_logoutConfig=new WeakMap,_FetchBuilder_logoutShouldReturn=new WeakMap;export{TOKEN_KEY,FetchBuilder,fetch,logout};