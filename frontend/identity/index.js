// deno-lint-ignore-file
// deno-fmt-ignore-file
// @ts-nocheck
async function n(t){return location.href=t,await T()}function T(){let t=e=>{setTimeout(()=>t(e),400)};return new Promise(t)}var i="token",c=class{#e;#t;#r=null;#o=null;#n=null;#s=!1;constructor(e,r){this.#e=e,this.#t=r}setBody(e){return this.#o=e,this}setHeaders(e){return this.#r=e,this}setLogout(e,r){return this.#n=e,this.#s=r,this}async fetch(){return await E(this.#e,this.#t,this.#r,this.#o,this.#n,this.#s)}};async function E(t,e,r,o,h,k){let l=new Headers;if(r)for(let a of r)l.append(a[0],a[1]);o&&l.append("content-type","application/json");let m=localStorage.getItem(i);m&&l.append("Authorization",m);let w=null;o&&(w=JSON.stringify(o));let s=await self.fetch(e,{method:t,body:w,headers:l}).catch(a=>(console.warn(a),new Response(null,{status:500})));if(s.ok){let a=s.headers.get("Authorization");return a&&localStorage.setItem(i,a),{status:"ok",body:await s.json().catch(I=>(console.warn(I),{}))}}else return s.status===401?(h&&await u(h,k),{status:"unauthorized"}):s.status===404?{status:"notFound"}:s.status>=400&&s.status<500?{status:"clientError",problems:(await s.json().catch(y=>(console.warn(y),{problems:[]}))).problems??[]}:{status:"serverError"}}async function u(t,e){let r=localStorage.getItem(i);await new c("DELETE",t.deleteTokenEndpoint).setHeaders(t.additionalHeaders).fetch(),localStorage.removeItem(i),r&&alert("Your session has expired");let o=e?`${t.loginHref}?redirect=${encodeURI(location.href)}`:t.loginHref;return await n(o)}var f="http://localhost:8081",p=["X-TS-API-Key","identity-site"],d={deleteTokenEndpoint:f+"/tokens/current",loginHref:"/login",additionalHeaders:[p]};async function g(t){let e=await new c("GET",f+"/tokens/current").setHeaders([p]).fetch(),r=null;if(e.status==="serverError"||e.status==="clientError"){console.error(`recieved unexpected response from server when fetching current token: ${e.status}`);return}switch(e.status==="unauthorized"&&localStorage.removeItem(i),e.status==="ok"&&(r=e.body),t){case"common":return await x(r);case"provisioning":return await H(r);case"none":return await b(r)}}async function x(t){if(!t){let e=encodeURI(location.href);return await n(`/login?redirect=${e}`)}switch(t.typ){case"common":return;case"provisioning":{let e=encodeURI(location.href);return await n(`/add-first-passkey?redirect=${e}`)}default:return await u(d,!0)}}async function H(t){if(!t)return await n("/register");switch(t.typ){case"provisioning":return;case"common":{let r=new URLSearchParams(document.location.search).get("redirect"),o=r?decodeURI(r):"/identity";return await n(o)}default:return await u(d,!1)}}async function b(t){if(t)switch(t.typ){case"common":{let r=new URLSearchParams(document.location.search).get("redirect"),o=r?decodeURI(r):"/identity";return await n(o)}case"provisioning":return await n("/add-first-passkey");default:return await u(d,!1)}}await g("common");
